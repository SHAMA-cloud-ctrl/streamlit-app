import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
import cvxpy as cp

# ุชุฎุตูุต ุงูุฃููุงู
st.markdown("<h1 style='color:#1E90FF;'>ูุญุงูู ุงูุชุญุณูู ุงููุงูู</h1>", unsafe_allow_html=True)
st.markdown("<p style='color:#32CD32;'>ููุง ููููู ุชุญุณูู ูุญูุธุชู ุงูุงุณุชุซูุงุฑูุฉ ุจูุงุกู ุนูู ุงููููุฏ ุงูุชูุธูููุฉ.</p>", unsafe_allow_html=True)

# ุชุฎุตูุต ุงูุฃุฒุฑุงุฑ ุจุงุณุชุฎุฏุงู CSS
st.markdown("""
    <style>
        .stButton > button {
            background-color: #1E90FF;
            color: white;
            border-radius: 12px;
            font-size: 16px;
            padding: 10px 20px;
        }
        .stButton > button:hover {
            background-color: #4682B4;
        }
    </style>
""", unsafe_allow_html=True)

# ุจูุงูุงุช ุซุงุจุชุฉ ููุนูุงุฆุฏ ูุงูุฃุตูู
mu = np.array([0.1, 0.15, 0.12, 0.08, 0.14])  # ุงูุนูุงุฆุฏ ุงููุชููุนุฉ ููุฃุตูู
Sigma = np.array([[0.1, 0.02, 0.03, 0.01, 0.02],
                  [0.02, 0.12, 0.04, 0.02, 0.03],
                  [0.03, 0.04, 0.15, 0.02, 0.05],
                  [0.01, 0.02, 0.02, 0.1, 0.01],
                  [0.02, 0.03, 0.05, 0.01, 0.11]])  # ูุตูููุฉ ุงูุชุจุงูู ูุงูุชุบุงูุฑ ููุฃุตูู
n = len(mu)  # ุนุฏุฏ ุงูุฃุตูู

# ุดุฑูุท ุชูุฑูุฑ ูุชุญุฏูุฏ ุงููุฎุงุทุฑุฉ
risk_limit = st.sidebar.slider("๐ ุงูุญุฏ ุงูุฃูุตู ูููุฎุงุทุฑุฉ", 0.0, 0.1, 0.05)

# ูุงุฆูุฉ ูุชุนุฏุฏุฉ ูุงุฎุชูุงุฑ ุงูุฃุตูู ุบูุฑ ุงููุชูุงููุฉ ูุน ุงูุดุฑูุนุฉ
non_halal = st.sidebar.multiselect("๐ ุงูุดุฑูุงุช ุบูุฑ ุงููุชูุงููุฉ ูุน ุงูุดุฑูุนุฉ", options=list(range(n)))

# ุฒุฑ ูุชุดุบูู ุงูุชุญุณูู
if st.button('๐ฏ ุชุญุณูู ุงููุญูุธุฉ'):
    # ุฅุนุฏุงุฏ ูููุฐุฌ ุงูุชุญุณูู
    w = cp.Variable(n)
    risk = cp.quad_form(w, Sigma)
    ret = mu @ w

    constraints = [
        cp.sum(w) == 1,
        w >= 0,
        risk <= risk_limit
    ]

    for i in non_halal:
        constraints.append(w[i] == 0)

    prob = cp.Problem(cp.Maximize(ret), constraints)
    prob.solve()

    st.markdown("<h2 style='color:green;'>ูุชุงุฆุฌ ุงููุญูุธุฉ ุงููุซูู</h2>", unsafe_allow_html=True)

    if w.value is not None:
        st.success("โ ุชู ุญุณุงุจ ุงููุญูุธุฉ ุงููุซูู ุจูุฌุงุญ!")

        # ุชุฎุตูุต ุงูุฑุณู ุงูุจูุงูู
        fig, ax = plt.subplots()
        ax.bar(range(n), w.value, color=['#FF6347', '#1E90FF', '#32CD32', '#FFD700', '#8A2BE2'])  # ุฃููุงู ูุฎุตุตุฉ
        ax.set_title('ุฃูุฒุงู ุงููุญูุธุฉ ุงูุงุณุชุซูุงุฑูุฉ', fontsize=14, color='darkblue')
        ax.set_xlabel('ุงูุฃุตูู', fontsize=12, color='navy')
        ax.set_ylabel('ุงููุณุจุฉ', fontsize=12, color='navy')

        # ุนุฑุถ ุงูุฑุณู ุงูุจูุงูู ูู Streamlit
        st.pyplot(fig)
    else:
        st.error("โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุญู ุถูู ุงููููุฏ ุงููุฏุฎูุฉ.")
